### Backend: Java REST APIs.

        • Add Cards API - Implemented a REST API on top of the Starbucks Library to enable Adding Cards.
        • Manage Order API - Implemented a REST API on top of the Starbucks Library to Manage Orders.
        • Payment API - Implemented a REST API on top of the Starbucks Library to enable Payments.
        • Authentication API - Implemented a REST API on top of the Starbucks Library to manage user authentication.
        • Deployed the REST APIs to AWS EC2 and enabled Auto-scaling and load-balancing. 
        
### Frontend: Web application 


Include all Diagrams, Design decisions and the overall Feature Set of the project


Create UI Wireframes
Create UI wireframes for each of the screen in your team’s solution
(this can be done by hand or electronically with a tool like “Pencil”)


Create an Overall Architecture Diagram (this does not have to be in UML) showing:
Software Components and their Public Interfaces
The Dependencies between Components
The Relative Relationship of how these components are Deployed
Recommendation:  Use UML Deployment/Component Diagram Notation.
http://agilemodeling.com/artifacts/deploymentDiagram.htm (Links to an external site.)Links to an external site.
http://agilemodeling.com/artifacts/componentDiagram.htm (Links to an external site.)Links to an external site.

